
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels: { app: postgres }
  template:
    metadata:
      labels: { app: postgres }
    spec:
      containers:
      - name: postgres
        image: postgres:16
        ports: [{ containerPort: 5432 }]
        envFrom:
        - secretRef: { name: postgres-secret }
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec: { command: ["pg_isready", "-U", "{{ .Values.postgres.user }}"] }
          initialDelaySeconds: 30
        readinessProbe:
          exec: { command: ["pg_isready", "-U", "{{ .Values.postgres.user }}"] }
          initialDelaySeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim: { claimName: postgres-pvc }
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
spec:
  ports: [{ port: 5432, targetPort: 5432 }]
  selector: { app: postgres }
  type: ClusterIP

